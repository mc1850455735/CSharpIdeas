<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>157, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>